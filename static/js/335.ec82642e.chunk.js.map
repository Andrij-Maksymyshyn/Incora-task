{"version":3,"file":"static/js/335.ec82642e.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.tsx","fetchApi/fetchApi.js","pages/HomePage.styled.jsx","pages/HomePage.tsx","pages/MovieDetailsPage.styled.jsx","components/Subscription/Subsription.styled.jsx","components/Subscription/Subscription.tsx","pages/MovieDetailsPage.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import { SpinnerWrapper } from './Loader.styled';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nconst Loader = () => (\r\n  <SpinnerWrapper>\r\n    <CircularProgress />       \r\n  </SpinnerWrapper>\r\n);\r\n\r\nexport default Loader;\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport async function fetchTrendCollection() {\r\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n    };\r\n\r\nexport async function fetchMovieByKeyWord(value) {\r\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\r\n};\r\n\r\nexport async function fetchMovieById(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchTrailer(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}/videos?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchMovieCredits(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n};\r\n \r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Main = styled.main`\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const UlHome = styled.ul`\r\n  padding: 0;\r\n  margin-left: -20px;\r\n  margin-top: -20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n    `;\r\n\r\nexport const LinkHome = styled(Link)`\r\n  padding: 0;\r\n  width: 100%;\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const LiHome = styled.li`\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n  max-width: 280px;\r\n  flex-basis: calc(100% - 20px);\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  background: #fafafa;\r\n  transition: all 500ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const ImgHome = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 398px;\r\nobject-fit: cover;\r\n`;\r\n\r\nexport const PHome = styled.p`\r\n  margin-top: 12px;\r\n  padding: 0 4px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  line-height: 1.33;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\ntext-align: center;\r\n`;","import { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchTrendCollection } from '../fetchApi/fetchApi';\r\nimport Loader from '../components/Loader';\r\nimport { Main, UlHome, LinkHome, ImgHome, LiHome, PHome, H1 } from './HomePage.styled';\r\n\r\n\r\nexport const noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\r\n\r\n\r\n\r\nexport function HomePage() {\r\n    const [movies, setMovies] = useState<{ [key: string]: string }[]>([]);\r\n    const [errorM, setErrorM] = useState<any | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const location = useLocation();\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        \r\n        fetchTrendCollection().then(data => {\r\n            const { data: { results } } = data;\r\n            setMovies(results);\r\n        })\r\n            \r\n            .catch(error => {\r\n                setErrorM(error)\r\n            })\r\n            \r\n            .finally(() => {\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                }, 1000)\r\n            }); \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Main>\r\n             {loading && <Loader/>}\r\n            <H1>Trending today</H1>\r\n            <UlHome>\r\n                {movies.map(({id, title, name, poster_path}) => (\r\n                    <LiHome key={id}>\r\n                        <LinkHome to={`/movies/${id}`} state={{ from: location }}>                            \r\n                                <ImgHome src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name} />\r\n                                <PHome>{title ? title : name}</PHome>                           \r\n                        </LinkHome>\r\n                    </LiHome>\r\n                ))}\r\n            </UlHome>\r\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\r\n            </Main>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\nimport { Link, NavLink} from \"react-router-dom\";\r\n\r\nexport const Main = styled.main`\r\n    padding: 20px;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Img = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: auto;\r\n`;\r\n\r\nexport const Div1 = styled.div`\r\nmax-width: 250px;\r\n`;\r\n\r\nexport const Div2 = styled.div`\r\npadding-left: 20px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\nmargin-bottom: 10px;\r\n    background-color: darkgoldenrod;\r\n    border: none;\r\n    border-radius: 5px;\r\n    height: 25px;\r\n    opacity: 0.8;\r\n\r\n    &:hover, &:focus {\r\n    opacity: 1;\r\n  }\r\n    `;\r\n\r\nexport const LinkStyled = styled(Link)`\r\ncolor: black;\r\n`;\r\n\r\nexport const LinkStyledAddIn = styled(NavLink)`\r\ncolor: black;\r\ntext-decoration: none;\r\nfont-weight: 500;\r\n\r\n&.active {\r\n    color: blue;\r\n}\r\n`;\r\n\r\nexport const Uldet = styled.ul`\r\nlist-style: none;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const TrailerBox = styled.div`\r\n    margin-left: 10px;\r\n`;","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchTrailer } from '../../fetchApi/fetchApi';\r\nimport { toast } from 'react-hot-toast';\r\nimport { TrailerBox } from './Subsription.styled';\r\nimport ReactPlayer from 'react-player';\r\nimport Loader from '../Loader';\r\n\r\n\r\n\r\n\r\nexport function StreamingService() {\r\n    const [trailer, setTrailer] = useState<{ [key: string]: string | any } | null>(null);\r\n    const { moviesId } = useParams();\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n\r\n    const url = 'https://www.youtube.com/watch?v=' + trailer;\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        fetchTrailer(moviesId).then(data => {\r\n            const { data: { results } } = data;          \r\n\r\n\r\n            setTrailer(results[0].key);\r\n            \r\n        })\r\n            .catch(error => {\r\n                console.log('Whoops, something went wrong...', error);\r\n                return toast.error('There are no treilers...');\r\n            })\r\n        \r\n            .finally(() => setTimeout(() => {\r\n                setLoading(false);\r\n            }, 1500));\r\n        \r\n    }, [moviesId]);\r\n\r\n    return (\r\n        <>\r\n        {trailer && (\r\n             <TrailerBox>\r\n                {loading && <Loader />}\r\n                        <ReactPlayer\r\n                            url={url}\r\n                            controls\r\n                        />\r\n            </TrailerBox>    \r\n        )}\r\n        </>\r\n        \r\n    )\r\n\r\n}","import { useState, useEffect, useRef } from \"react\";\r\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\r\nimport { fetchMovieById } from '../fetchApi/fetchApi';\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { Main, Box, Div1, Div2, Img, LinkStyled, Button, LinkStyledAddIn, Uldet } from './MovieDetailsPage.styled';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport { noPosterImg } from './HomePage';\r\nimport { StreamingService } from '../components/Subscription/Subscription';\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nexport function MovieDetailsPage() {\r\n    const { moviesId } = useParams();\r\n    const [movie, setMovie] = useState<{ [key: string]: string | any } | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const location = useLocation();\r\n    const grandPath = useRef<{ [key: string]: string | any }>(location);\r\n    // console.log(grandPath);\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true);    \r\n        \r\n        fetchMovieById(moviesId).then(data => {\r\n            const { data: { poster_path, title, name, overview, vote_average, genres } } = data;\r\n                           \r\n                                               \r\n            setMovie({\r\n                poster: poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg,\r\n                title,\r\n                name,\r\n                overview: overview ? overview : \"There is no overview\",\r\n                vote_average,\r\n                genresValues: (genres.length === 0) ?\r\n                    \"There are no genres\" :\r\n                    (genres.map(({ name }: {name: string}) => (\r\n                        [name]\r\n                    )).join(\", \"))\r\n            });\r\n\r\n        })\r\n            \r\n            .catch(error => {\r\n                console.log('Whoops, something went wrong...', error);\r\n                return toast.error('There is no film. Try another request...');\r\n            })\r\n\r\n            .finally(() => setTimeout(() => {\r\n                setLoading(false);\r\n            }, 1000));       \r\n        \r\n    }, [moviesId]);\r\n\r\n       \r\n    \r\n      \r\n\r\n    return (\r\n        \r\n        <Main>\r\n            \r\n            <Toaster position=\"top-right\" />\r\n            {loading && <Loader />}\r\n            \r\n            <Button type=\"button\"><LinkStyled to={grandPath.current?.state?.from ?? `/`} state={{ from: grandPath.current }}><FaArrowLeft />Go back</LinkStyled></Button>\r\n                \r\n            {movie && (\r\n                <Box>\r\n                    <Div1>\r\n                        <Img src={movie.poster} alt={movie.title ? movie.title : movie.name} />\r\n                    </Div1>\r\n                    <Div2>\r\n                    <h1>{movie.title ? movie.title : movie.name}</h1>\r\n                    <p>User Score: {Math.round(movie.vote_average) * 10}%</p>\r\n                    <h2>Overview</h2>\r\n                    <p>{movie.overview}</p>\r\n                    <h3>Genres</h3>\r\n                    <p>{movie.genresValues}</p>\r\n                    </Div2>\r\n                    <StreamingService/>\r\n                   \r\n                </Box>                    \r\n            )}\r\n\r\n            <hr />\r\n\r\n            <h3>Additional information</h3>\r\n\r\n             <Uldet>\r\n          <li>\r\n            <LinkStyledAddIn to={`/movies/${moviesId}/cast`} >\r\n              Cast\r\n            </LinkStyledAddIn>\r\n          </li>\r\n          <li>\r\n            <LinkStyledAddIn to={`/movies/${moviesId}/reviews`} >\r\n              Reviews\r\n            </LinkStyledAddIn>\r\n          </li>\r\n            </Uldet>\r\n            \r\n            <hr/>            \r\n            \r\n            <Outlet/>\r\n            \r\n                                          \r\n        </Main>\r\n    )\r\n};"],"names":["SpinnerWrapper","styled","CircularProgress","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchTrailer","fetchMovieCredits","movieId","fetchMovieReviews","Main","UlHome","LinkHome","Link","LiHome","ImgHome","PHome","H1","noPosterImg","HomePage","useState","movies","setMovies","errorM","setErrorM","loading","setLoading","location","useLocation","useEffect","then","data","results","catch","error","finally","setTimeout","Loader","map","id","title","name","poster_path","to","state","from","src","alt","Box","Img","Div1","Div2","Button","LinkStyled","LinkStyledAddIn","NavLink","Uldet","TrailerBox","StreamingService","trailer","setTrailer","moviesId","useParams","url","key","console","log","toast","controls","MovieDetailsPage","movie","setMovie","grandPath","useRef","overview","vote_average","genres","poster","genresValues","length","join","position","type","current","Math","round"],"sourceRoot":""}