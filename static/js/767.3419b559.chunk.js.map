{"version":3,"file":"static/js/767.3419b559.chunk.js","mappings":"8JAEaA,E,QAAiBC,GAAAA,IAAH,8F,kBCO3B,EANe,kBACb,SAACD,EAAD,WACE,SAACE,EAAA,EAAD,KAFW,C,4IC2Df,MAtDA,WACI,OAAsCC,EAAAA,EAAAA,UAAsC,IAA5E,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAkB,GAAhD,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAgCR,OA5BAE,EAAAA,EAAAA,YAAU,WAENH,GAAW,IAEXI,EAAAA,EAAAA,IAAkBH,GACbI,MAAK,SAAAC,GAEF,IAAgBC,EAAcD,EAAtBA,KAAQC,QAIhB,GAFAT,EAAeS,GAEQ,IAAnBA,EAAQC,OACxB,OAAOC,EAAAA,GAAAA,MAAY,+CAEV,IACJC,OAAM,SAAAC,GAEE,OADDC,QAAQC,IAAI,kCAAmCF,GACvCF,EAAAA,GAAAA,MAAY,+CAC3B,IACAK,SAAQ,WACLC,YAAW,WACTf,GAAW,EACZ,GAAE,IACN,GAEJ,GAAE,CAACC,KAIA,gCACKF,IAAW,SAACiB,EAAA,EAAD,IACXnB,IACG,wBACKA,EAAYoB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACb,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,EADI,QAYpC,C,2NC1DKG,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,0BAAO,mGACUC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IAD9D,0GAIA,SAAeI,EAAtB,+CAAO,OAAP,0BAAO,WAAmCC,GAAnC,sFACUF,IAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,kBAA+DK,EAA/D,yBADV,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAA8BC,GAA9B,sFACQJ,IAAAA,IAAA,UAAaF,EAAb,kBAA+BM,EAA/B,oBAAiDP,IADzD,0GAIA,SAAeQ,EAAtB,+CAAO,OAAP,0BAAO,WAA4BD,GAA5B,sFACQJ,IAAAA,IAAA,UAAaF,EAAb,kBAA+BM,EAA/B,2BAAwDP,IADhE,0GAIA,SAAeS,EAAtB,+CAAO,OAAP,0BAAO,WAAiCC,GAAjC,sFACQP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,4BAA0DV,IADlE,0GAKA,SAAejB,EAAtB,+CAAO,OAAP,0BAAO,WAAiC2B,GAAjC,sFACQP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,4BAA0DV,IADlE,0G","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.tsx","components/ReviewsInfo/ReviewsInfo.tsx","fetchApi/fetchApi.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import { SpinnerWrapper } from './Loader.styled';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nconst Loader = () => (\r\n  <SpinnerWrapper>\r\n    <CircularProgress />       \r\n  </SpinnerWrapper>\r\n);\r\n\r\nexport default Loader;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { fetchMovieReviews } from '../../fetchApi/fetchApi';\r\nimport Loader from '../Loader';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n\r\n\r\nfunction Reviews() {\r\n    const [reviewsInfo, setReviewsInfo] = useState<{ [key: string]: string }[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const { moviesId } = useParams();\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setLoading(true);\r\n\r\n        fetchMovieReviews(moviesId)\r\n            .then(data => {\r\n\r\n                const { data: { results } } = data;\r\n\r\n                setReviewsInfo(results);\r\n\r\n                if (results.length === 0) {\r\n    return toast.error('There is no information about the reviews...');\r\n                   };\r\n            })\r\n        .catch(error => {\r\n                console.log('Whoops, something went wrong...', error);\r\n                 return toast.error('There is no information about the reviews...');\r\n        })\r\n        .finally(() => {\r\n            setTimeout(() => {\r\n              setLoading(false);\r\n            }, 1000)\r\n        });\r\n        \r\n    }, [moviesId]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            {reviewsInfo && (\r\n                <ul>\r\n                    {reviewsInfo.map(({id, author, content}) => (\r\n                        <li key={id}>\r\n                            <h4>Author: {author}</h4>\r\n                            <p>{content}</p>\r\n                    </li>\r\n                    ))}\r\n                </ul>\r\n        )}\r\n        </>\r\n    )\r\n    \r\n\r\n};\r\n\r\nexport default Reviews;","import axios from 'axios';\r\n\r\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport async function fetchTrendCollection() {\r\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n    };\r\n\r\nexport async function fetchMovieByKeyWord(value) {\r\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\r\n};\r\n\r\nexport async function fetchMovieById(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchTreiler(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}/videos?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchMovieCredits(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n};\r\n \r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \r\n};\r\n"],"names":["SpinnerWrapper","styled","CircularProgress","useState","reviewsInfo","setReviewsInfo","loading","setLoading","moviesId","useParams","useEffect","fetchMovieReviews","then","data","results","length","toast","catch","error","console","log","finally","setTimeout","Loader","map","id","author","content","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchTreiler","fetchMovieCredits","movieId"],"sourceRoot":""}