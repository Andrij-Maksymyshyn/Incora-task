{"version":3,"file":"static/js/443.13084d08.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.tsx","fetchApi/fetchApi.js","pages/HomePage.styled.jsx","pages/HomePage.tsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.tsx","pages/MoviesPage.styled.jsx","pages/MoviesPage.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import { SpinnerWrapper } from './Loader.styled';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nconst Loader = () => (\r\n  <SpinnerWrapper>\r\n    <CircularProgress />       \r\n  </SpinnerWrapper>\r\n);\r\n\r\nexport default Loader;\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport async function fetchTrendCollection() {\r\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n    };\r\n\r\nexport async function fetchMovieByKeyWord(value) {\r\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\r\n};\r\n\r\nexport async function fetchMovieById(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchTreiler(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}/videos?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchMovieCredits(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n};\r\n \r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Main = styled.main`\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const UlHome = styled.ul`\r\n  padding: 0;\r\n  margin-left: -20px;\r\n  margin-top: -20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n    `;\r\n\r\nexport const LinkHome = styled(Link)`\r\n  padding: 0;\r\n  width: 100%;\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const LiHome = styled.li`\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n  max-width: 280px;\r\n  flex-basis: calc(100% - 20px);\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  background: #fafafa;\r\n  transition: all 500ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const ImgHome = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 398px;\r\nobject-fit: cover;\r\n`;\r\n\r\nexport const PHome = styled.p`\r\n  margin-top: 12px;\r\n  padding: 0 4px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  line-height: 1.33;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\ntext-align: center;\r\n`;","import { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchTrendCollection } from '../fetchApi/fetchApi';\r\nimport Loader from '../components/Loader';\r\nimport { Main, UlHome, LinkHome, ImgHome, LiHome, PHome, H1 } from './HomePage.styled';\r\n\r\n\r\nexport const noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\r\n\r\n\r\n\r\nexport function HomePage() {\r\n    const [movies, setMovies] = useState<{ [key: string]: string }[]>([]);\r\n    const [errorM, setErrorM] = useState<any | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const location = useLocation();\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        \r\n        fetchTrendCollection().then(data => {\r\n            const { data: { results } } = data;\r\n            setMovies(results);\r\n        })\r\n            \r\n            .catch(error => {\r\n                setErrorM(error)\r\n            })\r\n            \r\n            .finally(() => {\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                }, 1000)\r\n            }); \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Main>\r\n             {loading && <Loader/>}\r\n            <H1>Trending today</H1>\r\n            <UlHome>\r\n                {movies.map(({id, title, name, poster_path}) => (\r\n                    <LiHome key={id}>\r\n                        <LinkHome to={`/movies/${id}`} state={{ from: location }}>                            \r\n                                <ImgHome src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name} />\r\n                                <PHome>{title ? title : name}</PHome>                           \r\n                        </LinkHome>\r\n                    </LiHome>\r\n                ))}\r\n            </UlHome>\r\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\r\n            </Main>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Box = styled.div`\r\n     padding: 20px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n display: inline-block;\r\n    margin-right: 15px;\r\n    width: 20%;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    outline: none;\r\n    border-color: dimgrey;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\ndisplay: inline-block;\r\n    width: 10%;\r\n    height: 29px;\r\n    border: 0;\r\n    cursor: pointer;\r\n    outline: none;\r\n    opacity: 0.8;\r\n    background-color: forestgreen;\r\n    border-radius: 5px;\r\n\r\n     &:hover, &:focus {\r\n    opacity: 1;\r\n  }\r\n`;","import { useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { Box, Form, Input, Button } from './Searchbar.styled';\r\n\r\n\r\ninterface IProps {\r\n  propSubmit: (inputFilmValue: string) => void,\r\n};\r\n\r\n\r\nfunction Searchbar ({propSubmit}: IProps) {\r\nconst [inputFilmValue, setInputFilmValue] = useState<string>('');\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.currentTarget;\r\n\r\n    setInputFilmValue(value);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (inputFilmValue.trim() === '') {\r\n      toast.error('Please, fill in the field of search');\r\n      return;\r\n    }\r\n\r\n    propSubmit(inputFilmValue);\r\n\r\n    setInputFilmValue('');\r\n  };\r\n\r\n  return (\r\n     <Box>\r\n        <Form onSubmit={handleSubmit}>\r\n           <Input\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies by keyword\"\r\n            value={inputFilmValue}\r\n            onChange={handleChange}\r\n                  />\r\n            <Button type=\"submit\">\r\n           Search\r\n          </Button>\r\n        </Form>\r\n      </Box>    \r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const UlMovies = styled.ul`\r\n  padding: 0;\r\n  margin-left: -20px;\r\n  margin-top: -20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n    `;\r\n\r\nexport const LinkMovies = styled(Link)`\r\n  padding: 0;\r\n  width: 100%;\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const LiMovies = styled.li`\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n  max-width: 280px;\r\n  flex-basis: calc(100% - 20px);\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  background: #fafafa;\r\n  transition: all 500ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const ImgMovies = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 398px;\r\nobject-fit: cover;\r\n`;\r\n\r\nexport const PMovies = styled.p`\r\n  margin-top: 12px;\r\n  padding: 0 4px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  line-height: 1.33;\r\n  text-transform: uppercase;\r\n`;","import { useState, useEffect } from 'react';\r\nimport { useSearchParams, useLocation } from \"react-router-dom\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport Searchbar from '../components/Searchbar';\r\nimport { fetchMovieByKeyWord } from '../fetchApi/fetchApi';\r\nimport Loader from '../components/Loader';\r\nimport { noPosterImg } from './HomePage';\r\nimport { UlMovies, LinkMovies, LiMovies, ImgMovies, PMovies } from './MoviesPage.styled';\r\n\r\n\r\n\r\nexport function MoviesPage() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [movies, setMovies] = useState<{ [key: string]: string }[]>([]);\r\n  const [errorM, setErrorM] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const searchFilmValue = searchParams.get('value');\r\n  const location = useLocation();\r\n\r\n  \r\n\r\n     const addSearchValue = (formData: string) => {\r\n     setSearchParams({value: formData})   \r\n  };\r\n\r\n    useEffect(() => {\r\n         if (searchFilmValue === '') {\r\n      return;\r\n        };\r\n        \r\n      if (searchFilmValue) {\r\n          \r\n        setLoading(true);\r\n        \r\n        \r\n        fetchMovieByKeyWord(searchFilmValue)\r\n          .then(data => {\r\n          const { data: { results } } = data;\r\n\r\n          if (results.length === 0) {\r\n            return toast.error('Sorry, there are no movies. Try another request...');\r\n          };\r\n\r\n          setMovies(results);\r\n          })\r\n          \r\n          .catch(error => {\r\n            setErrorM(error);\r\n        \r\n          })\r\n          \r\n          .finally(() => {\r\n            setTimeout(() => {\r\n              setLoading(false);\r\n            }, 1000)\r\n          });   \r\n      }         \r\n    }, [searchFilmValue]);\r\n\r\n    return (\r\n    <div>\r\n      <Toaster position=\"top-right\" />\r\n            <Searchbar propSubmit={addSearchValue} />\r\n        {loading && <Loader />}\r\n            <UlMovies>\r\n                {movies.map(({id, title, name, poster_path}) => (\r\n                  <LiMovies key={id}>\r\n                    <LinkMovies to={`${id}`} state={{ from: location }}>\r\n                      <ImgMovies src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name}/>\r\n                      <PMovies>{title ? title : name}</PMovies>\r\n                    </LinkMovies>\r\n                  </LiMovies>\r\n                ))}\r\n            </UlMovies>\r\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\r\n    </div>\r\n  );\r\n};"],"names":["SpinnerWrapper","styled","CircularProgress","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchTreiler","fetchMovieCredits","movieId","fetchMovieReviews","Main","UlHome","LinkHome","Link","LiHome","ImgHome","PHome","H1","noPosterImg","HomePage","useState","movies","setMovies","errorM","setErrorM","loading","setLoading","location","useLocation","useEffect","then","data","results","catch","error","finally","setTimeout","Loader","map","id","title","name","poster_path","to","state","from","src","alt","Box","Form","Input","Button","propSubmit","inputFilmValue","setInputFilmValue","onSubmit","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","UlMovies","LinkMovies","LiMovies","ImgMovies","PMovies","MoviesPage","useSearchParams","searchParams","setSearchParams","searchFilmValue","get","length","position","formData"],"sourceRoot":""}