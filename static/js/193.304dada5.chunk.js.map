{"version":3,"file":"static/js/193.304dada5.chunk.js","mappings":"8JAEaA,E,QAAiBC,GAAAA,IAAH,8F,kBCO3B,EANe,kBACb,SAACD,EAAD,WACE,SAACE,EAAA,EAAD,KAFW,C,2NCDTC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,0BAAO,mGACUC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IAD9D,0GAIA,SAAeI,EAAtB,+CAAO,OAAP,0BAAO,WAAmCC,GAAnC,sFACUF,IAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,kBAA+DK,EAA/D,yBADV,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAA8BC,GAA9B,sFACQJ,IAAAA,IAAA,UAAaF,EAAb,kBAA+BM,EAA/B,oBAAiDP,IADzD,0GAIA,SAAeQ,EAAtB,+CAAO,OAAP,0BAAO,WAA4BD,GAA5B,sFACQJ,IAAAA,IAAA,UAAaF,EAAb,kBAA+BM,EAA/B,2BAAwDP,IADhE,0GAIA,SAAeS,EAAtB,+CAAO,OAAP,0BAAO,WAAiCC,GAAjC,sFACQP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,4BAA0DV,IADlE,0GAKA,SAAeW,EAAtB,+CAAO,OAAP,0BAAO,WAAiCD,GAAjC,sFACQP,IAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,4BAA0DV,IADlE,0G,qMCvBMY,EAAOd,EAAAA,GAAAA,KAAH,8CAIJe,EAASf,EAAAA,GAAAA,GAAH,+KAUNgB,GAAWhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,kGAORkB,EAASlB,EAAAA,GAAAA,GAAH,mRAcNmB,EAAUnB,EAAAA,GAAAA,IAAH,2FAOPoB,EAAQpB,EAAAA,GAAAA,EAAH,gKASLqB,EAAKrB,EAAAA,GAAAA,GAAH,6C,SC/CFsB,EAAc,8DAIpB,SAASC,IACZ,OAA4BC,EAAAA,EAAAA,UAAsC,IAAlE,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAqB,MAAjD,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,WAAkB,GAAhD,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAyBjB,OArBAC,EAAAA,EAAAA,YAAU,WACNH,GAAW,IAEX1B,EAAAA,EAAAA,MAAuB8B,MAAK,SAAAC,GACxB,IAAgBC,EAAcD,EAAtBA,KAAQC,QAChBV,EAAUU,EACb,IAEIC,OAAM,SAAAC,GACHV,EAAUU,EACb,IAEAC,SAAQ,WACLC,YAAW,WACPV,GAAW,EACd,GAAE,IACN,GAER,GAAE,KAIC,UAAChB,EAAD,WACMe,IAAW,SAACY,EAAA,EAAD,KACb,SAACpB,EAAD,8BACA,SAACN,EAAD,UACKU,EAAOiB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,YAAnB,OACR,SAAC5B,EAAD,WACI,UAACF,EAAD,CAAU+B,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMlB,GAA9C,WACQ,SAACZ,EAAD,CAAS+B,IAAKJ,EAAe,kCAAoCA,EAAexB,EAAa6B,IAAKP,GAAgBC,KAClH,SAACzB,EAAD,UAAQwB,GAAgBC,QAHvBF,EADL,MASfhB,IAAU,mEAGtB,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.tsx","fetchApi/fetchApi.js","pages/HomePage.styled.jsx","pages/HomePage.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;","import { SpinnerWrapper } from './Loader.styled';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\nconst Loader = () => (\r\n  <SpinnerWrapper>\r\n    <CircularProgress />       \r\n  </SpinnerWrapper>\r\n);\r\n\r\nexport default Loader;\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport async function fetchTrendCollection() {\r\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n    };\r\n\r\nexport async function fetchMovieByKeyWord(value) {\r\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\r\n};\r\n\r\nexport async function fetchMovieById(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchTrailer(filmId) {\r\n  return await axios.get(`${BASE_URL}/movie/${filmId}/videos?api_key=${API_KEY}`);  \r\n};\r\n\r\nexport async function fetchMovieCredits(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n};\r\n \r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Main = styled.main`\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const UlHome = styled.ul`\r\n  padding: 0;\r\n  margin-left: -20px;\r\n  margin-top: -20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n    `;\r\n\r\nexport const LinkHome = styled(Link)`\r\n  padding: 0;\r\n  width: 100%;\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const LiHome = styled.li`\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n  max-width: 280px;\r\n  flex-basis: calc(100% - 20px);\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  background: #fafafa;\r\n  transition: all 500ms ease-in-out;\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const ImgHome = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 398px;\r\nobject-fit: cover;\r\n`;\r\n\r\nexport const PHome = styled.p`\r\n  margin-top: 12px;\r\n  padding: 0 4px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  line-height: 1.33;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\ntext-align: center;\r\n`;","import { useState, useEffect } from 'react';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchTrendCollection } from '../fetchApi/fetchApi';\r\nimport Loader from '../components/Loader';\r\nimport { Main, UlHome, LinkHome, ImgHome, LiHome, PHome, H1 } from './HomePage.styled';\r\n\r\n\r\nexport const noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\r\n\r\n\r\n\r\nexport function HomePage() {\r\n    const [movies, setMovies] = useState<{ [key: string]: string }[]>([]);\r\n    const [errorM, setErrorM] = useState<any | null>(null);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const location = useLocation();\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        \r\n        fetchTrendCollection().then(data => {\r\n            const { data: { results } } = data;\r\n            setMovies(results);\r\n        })\r\n            \r\n            .catch(error => {\r\n                setErrorM(error)\r\n            })\r\n            \r\n            .finally(() => {\r\n                setTimeout(() => {\r\n                    setLoading(false)\r\n                }, 1000)\r\n            }); \r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Main>\r\n             {loading && <Loader/>}\r\n            <H1>Trending today</H1>\r\n            <UlHome>\r\n                {movies.map(({id, title, name, poster_path}) => (\r\n                    <LiHome key={id}>\r\n                        <LinkHome to={`/movies/${id}`} state={{ from: location }}>                            \r\n                                <ImgHome src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name} />\r\n                                <PHome>{title ? title : name}</PHome>                           \r\n                        </LinkHome>\r\n                    </LiHome>\r\n                ))}\r\n            </UlHome>\r\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\r\n            </Main>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["SpinnerWrapper","styled","CircularProgress","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchTrailer","fetchMovieCredits","movieId","fetchMovieReviews","Main","UlHome","LinkHome","Link","LiHome","ImgHome","PHome","H1","noPosterImg","HomePage","useState","movies","setMovies","errorM","setErrorM","loading","setLoading","location","useLocation","useEffect","then","data","results","catch","error","finally","setTimeout","Loader","map","id","title","name","poster_path","to","state","from","src","alt"],"sourceRoot":""}